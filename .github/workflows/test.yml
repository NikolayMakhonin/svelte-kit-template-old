name: Test
'on':
  push:
    branches:
      - 'master'
  pull_request:
    branches:
      - 'master'

jobs:
  test:
    strategy:
      matrix:
        os: [macos-latest]
#        os: [ubuntu-latest, windows-latest, macos-latest]
        node-version: [16.x]
    runs-on: ${{ matrix.os }}

    steps:
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

#      - name: Check secrets
#        env:
#          COVERALLS_REPO_TOKEN: ${{ secrets.COVERALLS_REPO_TOKEN }}
#        run: |
#          node -e "o=['COVERALLS_REPO_TOKEN'].filter(o=>!process.env[o]);o.length&&(console.log('You should set env variables: '+o.join(', ')),process.exit(1))"

      - uses: actions/checkout@v3

      # region install pnpm

      # from: https://github.com/pnpm/action-setup
      - name: Install pnpm
        id: pnpm-install
        uses: pnpm/action-setup@v2.1.0
        with:
          version: 7
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-cache
        run: |
          echo "::set-output name=pnpm_cache_dir::$(pnpm store path)"

      - name: Setup pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ steps.pnpm-cache.outputs.pnpm_cache_dir }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      # endregion

      - name: Install dependencies
        run: |
          pnpm install --frozen-lockfile

      # region install playwright

      # from: https://github.com/microsoft/playwright/issues/7249#issuecomment-1154603556
      - name: Get installed Playwright version
        id: playwright-version
        run: |
          echo "::set-output name=version::$(node -e "console.log(require('playwright/package.json').version)")"

      - name: Setup playwright cache
        uses: actions/cache@v3
        id: playwright-cache
        with:
          path: ${{ runner.os == 'Windows' && '~\AppData\Local\ms-playwright' || runner.os == 'macOS' && '~/Library/Caches/ms-playwright' || '~/.cache/ms-playwright' }}
          key: '${{ runner.os }}-playwright-${{ steps.playwright-version.outputs.version }}'
          restore-keys: |
            ${{ runner.os }}-playwright-

      - name: Install Playwright browsers
        if: steps.playwright-cache.outputs.cache-hit != 'true'
        run: playwright install

      - name: Install Playwright dependencies
        run: pnpm run install:playwright-deps

      # endregion

      - name: Lint
        shell: bash
        run: |
          pnpm run audit
          pnpm run lint

#      - name: Build
#        shell: bash
#        run: |
#          pnpm run build

      - name: Mocha tests
        shell: bash
        run: |
          pnpm run test:ci

      # region install chromium

#      - name: Install chromium dependencies
#        if: ${{ matrix.node-version == '18.x' }}
#        run: |
#          sudo apt install libudev-dev libgtk2.0-0
#          sudo ln -sf /lib/$(arch)-linux-gnu/libudev.so.1 /lib/$(arch)-linux-gnu/libudev.so.0
#
#      - name: Install chromium
#        if: ${{ matrix.node-version == '18.x' }}
#        uses: browser-actions/setup-chrome@latest
#        with:
#          chrome-version: 297097 # Chromium 39.0.2171.99 (Android - 5.1.0)

      # endregion

#      - name: Karma tests
#        if: ${{ matrix.node-version == '18.x' }}
#        uses: GabrielBB/xvfb-action@v1
#        env:
#          CHROMIUM_BIN: /opt/hostedtoolcache/chromium/297097/x64/chrome
#        with:
#          run: |
#            pnpm run test:karma
#
#      - name: Coveralls
#        if: ${{ matrix.node-version == '18.x' }}
#        env:
#          COVERALLS_REPO_TOKEN: ${{ secrets.COVERALLS_REPO_TOKEN }}
#        shell: bash
#        run: |
#          pnpm add coveralls -D
#          pnpm run coveralls
